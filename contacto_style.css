document.addEventListener('DOMContentLoaded', () => {
  const user = JSON.parse(localStorage.getItem('user'));
  if (!user || user.role !== 'admin') {
    alert("Acceso denegado");
    window.location.href = 'login.html';
    return;
  }

  const eventTableBody = document.getElementById('eventTableBody');
  const createEventForm = document.getElementById('createEventForm');
  const modal = new bootstrap.Modal(document.getElementById('createEventModal'));

  // Cargar eventos
  const loadEvents = async () => {
    const res = await fetch('http://localhost:3000/events');
    const events = await res.json();
    eventTableBody.innerHTML = '';

    events.forEach((event, index) => {
      eventTableBody.innerHTML += `
        <tr>
          <td>${index + 1}</td>
          <td><img src="${event.imageUrl || 'https://via.placeholder.com/80'}" class="thumbnail" alt="img"></td>
          <td>${event.title}</td>
          <td>${event.date}</td>
          <td>${event.capacity}</td>
          <td>
            <button class="btn btn-sm btn-primary" onclick="editEvent(${event.id})">Editar</button>
            <button class="btn btn-sm btn-danger ms-2" onclick="deleteEvent(${event.id})">Eliminar</button>
          </td>
        </tr>
      `;
    });
  };

  // Crear evento desde formulario
  createEventForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const title = document.getElementById('title').value;
    const date = document.getElementById('date').value;
    const capacity = parseInt(document.getElementById('capacity').value);
    const imageUrl = document.getElementById('imageUrl').value;

    const newEvent = { title, date, capacity, imageUrl };

    await fetch('http://localhost:3000/events', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(newEvent)
    });

    createEventForm.reset();
    modal.hide();
    loadEvents();
  });

  // Eliminar evento
  window.deleteEvent = async (id) => {
    if (confirm("¿Seguro que deseas eliminar este evento?")) {
      await fetch(`http://localhost:3000/events/${id}`, { method: 'DELETE' });
      loadEvents();
    }
  };

  // Editar evento (aún con prompt)
  window.editEvent = async (id) => {
    const res = await fetch(`http://localhost:3000/events/${id}`);
    const event = await res.json();

    const title = prompt("Editar título:", event.title);
    const date = prompt("Editar fecha:", event.date);
    const capacity = prompt("Editar capacidad:", event.capacity);
    const imageUrl = prompt("Editar imagen URL:", event.imageUrl || "");

    if (!title || !date || !capacity) {
      alert("Campos obligatorios.");
      return;
    }

    const updatedEvent = { title, date, capacity: parseInt(capacity), imageUrl };

    await fetch(`http://localhost:3000/events/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(updatedEvent)
    });

    loadEvents();
  };

  // Cerrar sesión
  document.getElementById("logoutBtn").addEventListener("click", () => {
    localStorage.removeItem("user");
    window.location.href = "login.html";
  });

  loadEvents();
});